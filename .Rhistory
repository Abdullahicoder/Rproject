geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
user_type_2_sl <- Sleep_average %>%
mutate(user_type_2_sl = case_when(
mean_daily_sleep <= 340 ~ "needs Nap",
mean_daily_sleep >= 340 & mean_daily_sleep < 420 ~  "enough sleep",
mean_daily_sleep >= 420 & mean_daily_sleep < 700 ~ "Well rested",
))
Sleep_average <- Sleep_Calories %>%
group_by(Id) %>%
summarise (mean_daily_sleep = mean(TotalMinutesAsleep))
head(Sleep_average)
user_type_calories <- Calories_average %>%
mutate(user_type = case_when(
mean_daily_calories < 1600 ~ "sedentary",
mean_daily_calories >= 1600 & mean_daily_calories < 2200~ "lightly active",
mean_daily_calories >= 2200 & mean_daily_calories < 2999 ~ "fairly active",
mean_daily_calories >= 3000 ~ "very active"
))
head(user_type_calories)
Sleep_vs_calorie <- Sleep_Calories %>%
group_by(Id) %>%
summarise (mean_daily_sleep = mean(TotalMinutesAsleep), mean_daily_calorie = mean(Calories))
head(Sleep_vs_calorie)
user_type_2_sl <- Sleep_average %>%
mutate(user_type_2_sl = case_when(
mean_daily_sleep <= 340 ~ "needs Nap",
mean_daily_sleep >= 340 & mean_daily_sleep < 420 ~  "enough sleep",
mean_daily_sleep >= 420 & mean_daily_sleep < 700 ~ "Well rested",
))
head(user_type_2_sl)
user_type_sl_percent <- user_type_2_sl %>%
group_by(user_type_2_sl) %>%
summarise(total = n()) %>%
mutate(totals = sum(total)) %>%
group_by(user_type_2_sl) %>%
summarise(total_percent = total / totals) %>%
mutate(labels = scales::percent(total_percent))
user_type_sl_percent$user_type <- factor(user_type_sl_percent$user_type_2_sl , levels = c("Well rested", "enough sleep", "needs Nap"))
head(user_type_sl_percent)
user_sleep_category_2 %>%
ggplot(data= user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data= user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
View(user_type_2_sl)
user_type_2_sl <- Sleep_average %>%
mutate(user_type_2_sl = case_when(
mean_daily_sleep <= 340 ~ "needs Nap",
mean_daily_sleep >= 340 & mean_daily_sleep < 420 ~  "enough sleep",
mean_daily_sleep >= 420 & mean_daily_sleep < 700 ~ "Well rested",
))
head(user_type_2_sl)
Calories_average %>%
ggplot(data = Calories_average, mapping = aes(x = mean_daily_calories)) +
geom_histogram(binwidth = 100, color = "black", fill = "blue") +
labs(title = "Histogram of mean daily calories burned per user", x = "Mean daily calories", y = "Frequency")
user_type_2_sl %>%
ggplot(data= user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data= user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data = user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data = user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data = user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data = user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data = user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
View(user_type_2_sl)
user_type_2_sl %>%
ggplot(data = user_sleep_category_2, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
View(user_type_2_sl)
user_type_2_sl %>%
ggplot(data = user_type_2_sl, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = sleep_hours, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl <- Sleep_average %>%
mutate(hours_sleep = mean_daily_sleep / 60),
user_type_2_sl <- Sleep_average %>%
mutate(hours_sleep = mean_daily_sleep / 60) %>%
mutate(user_type_2_sl = case_when(
mean_daily_sleep <= 340 ~ "needs Nap",
mean_daily_sleep >= 340 & mean_daily_sleep < 420 ~  "enough sleep",
mean_daily_sleep >= 420 & mean_daily_sleep < 700 ~ "Well rested",
))
head(user_type_2_sl)
View(user_type_2_sl)
user_type_2_sl %>%
ggplot(data = user_type_2_sl, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = hours_sleep, color = mean_daily_sleep)) +
geom_point() +
geom_smooth(method = "lm", color = "red", linetype = "dashed", size = 2) +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
user_type_2_sl %>%
ggplot(data = user_type_2_sl, mapping = aes(x = mean_daily_sleep, y = user_type_2_sl,
size = hours_sleep, color = mean_daily_sleep)) +
geom_point() +
theme_bw() +
labs(x = "Mean daily sleep (Minuts)", y = "Sleep Category",
color = "daily sleep mintes", size = "sleep hours") +
ggtitle("Categorizing users according to their sleeping time")
Calories_average %>%
ggplot(data = Calories_average, mapping = aes(x = mean_daily_calories, y = Id)) +
geom_histogram(binwidth = 100, color = "black", fill = "blue") +
labs(title = "Histogram of mean daily calories burned per user", x = "Mean daily calories", y = "Frequency")
Calories_average %>%
ggplot(data = Calories_average, mapping = aes(x = mean_daily_calories)) +
geom_histogram(binwidth = 100, color = "black", fill = "blue") +
labs(title = "Histogram of mean daily calories burned per user", x = "Mean daily calories", y = "Frequency")
View(user_type_sl_percent)
user_type_sl_percent <- user_type_2_sl %>%
group_by(user_type_2_sl) %>%
summarise(total = n()) %>%
mutate(totals = sum(total)) %>%
group_by(user_type_2_sl) %>%
summarise(total_percent = total / totals) %>%
mutate(labels = scales::percent(total_percent))
user_type_sl_percent$user_type <- factor(user_type_sl_percent$user_type_2_sl , levels = c("Well rested", "enough sleep", "needs Nap"))
head(user_type_sl_percent)
user_type_sl_percent <- user_type_2_sl %>%
group_by(user_type_2_sl) %>%
summarise(total = n()) %>%
mutate(totals = sum(total)) %>%
group_by(user_type) %>%
summarise(total_percent = total / totals) %>%
mutate(labels = scales::percent(total_percent))
user_type_sl_percent <- user_type_2_sl %>%
group_by(user_type_2_sl) %>%
summarise(total = n()) %>%
mutate(totals = sum(total)) %>%
group_by(user_type_2_sl) %>%
summarise(total_percent = total / totals) %>%
mutate(labels = scales::percent(total_percent))
user_type_sl_percent$user_type <- factor(user_type_sl_percent$user_type_2_sl , levels = c("Well rested", "enough sleep", "needs Nap"))
head(user_type_sl_percent)
```
user_type_sl_percent <- user_type_2_sl %>%
group_by(user_type_2_sl) %>%
summarise(total = n()) %>%
mutate(totals = sum(total)) %>%
group_by(user_type_2_sl) %>%
summarise(total_percent = total / totals) %>%
mutate(labels = scales::percent(total_percent))
user_type_sl_percent$user_type <- factor(user_type_sl_percent$user_type_2_sl , levels = c("Well rested", "enough sleep", "needs Nap"))
head(user_type_sl_percent)
user_type_sl_percent <- user_type_2_sl %>%
group_by(user_type_2_sl) %>%
summarise(total = n()) %>%
mutate(totals = sum(total)) %>%
group_by(user_type_2_sl) %>%
summarise(total_percent = total / totals) %>%
mutate(labels = scales::percent(total_percent))
user_type_sl_percent$user_type_2_sl<- factor(user_type_sl_percent$user_type_2_sl , levels = c("Well rested", "enough sleep", "needs Nap"))
head(user_type_sl_percent)
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping aes(x = "", y = total_percent, fill = labels)) +
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping = aes(x = "", y = total_percent, fill = labels)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = 0) +
geom_text(aes(label = paste0(total_percent * 100, "%")), position = position_stack(vjust = 0.5)) +
labs(x = NULL, y = NULL, fill = NULL, title = "User sleep status") +
theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
library(waffle)
install.packages("waffle")
library(waffle)
installed.packages("plotrix")
library(plotrix)
installed.packages("plotrix")
library(plotrix)
user_type_sl_percent %>%
spie(user_type_percent$total_percent,
labels = paste0(user_data$labels, "\n", user_data$total_percent * 100, "%"),
col = c("#F8766D", "#00BFC4", "#C77CFF"),
main = "User sleep status (spie chart)")
spie(user_type_percent$total_percent,
labels = paste0(user_data$labels, "\n", user_data$total_percent * 100, "%"),
col = c("#F8766D", "#00BFC4", "#C77CFF"),
main = "User sleep status (spie chart)")
user_type_sl_percent %>%
spie(user_type_percent$total_percent,
labels = paste0(user_data$labels, "\n", user_type_sl_percent$total_percent * 100, "%"),
col = c("#F8766D", "#00BFC4", "#C77CFF"),
main = "User sleep status (spie chart)")
spie(user_type_percent$total_percent,
labels = paste0(user_data$labels, "\n", user_type_sl_percent$total_percent * 100, "%"),
col = c("#F8766D", "#00BFC4", "#C77CFF"),
main = "User sleep status (spie chart)")
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping = aes(x = "", y = total_percent, fill = labels)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
geom_text(aes(label = paste0(total_percent * 100, "%")), position = position_stack(vjust = 0.5)) +
labs(x = NULL, y = NULL, fill = NULL, title = "User sleep status (doughnut chart)") +
theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold"))
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping = aes(x = "", y = total_percent, fill = labels)) +
waffle(user_data$total_percent * 100,
rows = 10,
colors = c("#F8766D", "#00BFC4", "#C77CFF"),
title = "User sleep status (waffle chart)",
labels = paste0(user_data$labels, "\n", user_data$total_percent * 100, "%"),
size = 0.8)
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping = aes(x = "", y = total_percent, fill = labels)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
geom_text(aes(label = paste0(total_percent * 100, "%")), position = position_stack(vjust = 0.5)) +
labs(x = NULL, y = NULL, fill = NULL, title = "User sleep status (doughnut chart)") +
theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) +
waffle(user_data$total_percent * 100,
rows = 10,
colors = c("#F8766D", "#00BFC4", "#C77CFF"),
title = "User sleep status (waffle chart)",
labels = paste0(user_data$labels, "\n", user_data$total_percent * 100, "%"),
size = 0.8)
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping = aes(x = "", y = total_percent, fill = labels)) +
waffle(user_type_sl_percent$total_percent * 100,
rows = 10,
colors = c("#F8766D", "#00BFC4", "#C77CFF"),
title = "User sleep status (waffle chart)",
labels = paste0(user_data$labels, "\n", user_data$total_percent * 100, "%"),
size = 0.8)
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping = aes(x = "", y = total_percent, fill = labels)) +
waffle(user_type_sl_percent$total_percent * 100,
rows = 10,
colors = c("#F8766D", "#00BFC4", "#C77CFF"),
title = "User sleep status (waffle chart)",
labels = paste0(user_type_sl_percent$labels, "\n", user_type_sl_percent$total_percent * 100, "%"),
size = 0.8)
waffle(user_type_sl_percent$total_percent * 100,
rows = 10,
colors = c("#F8766D", "#00BFC4", "#C77CFF"),
title = "User sleep status (waffle chart)",
labels = paste0(user_type_sl_percent$labels, "\n", user_type_sl_percent$total_percent * 100, "%"),
size = 0.8)
user_type_sl_percent %>%
ggplot(data = user_type_sl_percent, mapping = aes(x = "", y = total_percent, fill = labels)) +
geom_bar(width = 1, stat = "identity") +
coord_polar(theta = "y", start = 0) +
geom_text(aes(label = paste0(total_percent * 100, "%")), position = position_stack(vjust = 0.5)) +
labs(x = NULL, y = NULL, fill = NULL, title = "User sleep status (doughnut chart)") +
theme_classic() +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14, face = "bold")) + coord_polar(theta = "y")
user_type_percent_calories %>%
ggplot(data = user_type_percent_calories, mapping = aes(x = user_type, y = total_percent)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "User Type", y = "Total Percent", title = "User Activity Level")
user_type_percent_calories %>%
ggplot(data = user_type_percent_calories, mapping = aes(x = user_type, y = labels)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "User Type", y = "Total Percent", title = "User Activity Level")
user_data <- data.frame(
user_type_2_sl = c(1, 2, 3),
total_percent = c(0.25, 0.2916667, 0.4583333),
labels = c("needs Nap", "enough sleep", "Well rested")
)
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = NULL, fill = NULL, title = "Pie chart of user types") +
theme_minimal() +
theme(axis.text = element_blank())
user_data <- data.frame(
user_type_2_sl = c(1, 2, 3),
total_percent = c(0.25, 0.2916667, 0.4583333),
labels = c("needs Nap", "enough sleep", "Well rested")
)
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = NULL, fill = NULL, title = "Pie chart of user types") +
theme_minimal() +
theme(axis.text = element_blank())
user_data <- data.frame(
user_type_2_sl = c(1, 2, 3),
total_percent = c(0.25, 0.2916667, 0.4583333),
labels = c("needs Nap", "enough sleep", "Well rested")
)
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = NULL, fill = NULL, title = "Pie chart of user types") +
theme_minimal() +
theme(axis.text = element_blank() +
geom_text(aes(label = paste0(round(total_percent * 100), "%")), position = position_stack(vjust = 0.5) +
scale_fill_brewer(palette = "Set2"))
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
user_data <- data.frame(
user_type_2_sl = c(1, 2, 3),
total_percent = c(0.25, 0.2916667, 0.4583333),
labels = c("needs Nap", "enough sleep", "Well rested")
)
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = NULL, fill = NULL, title = "Pie chart of user types") +
theme_minimal() +
theme(axis.text = element_blank() +
geom_text(aes(label = paste0(round(total_percent * 100), "%")), position = position_stack(vjust = 0.5) +
scale_fill_brewer(palette = "Set2")
user_data <- data.frame(
user_data <- data.frame(
user_type_2_sl = c(1, 2, 3),
total_percent = c(0.25, 0.2916667, 0.4583333),
labels = c("needs Nap", "enough sleep", "Well rested")
)
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = NULL, fill = NULL, title = "Pie chart of user types") +
theme_minimal() +
theme(axis.text = element_blank()) +
geom_text(aes(label = paste0(round(total_percent * 100), "%")), position = position_stack(vjust = 0.5))
user_data <- data.frame(
user_type_2_sl = c(1, 2, 3),
total_percent = c(0.25, 0.2916667, 0.4583333),
labels = c("needs Nap", "enough sleep", "Well rested")
)
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = NULL, fill = NULL, title = "") +
theme_minimal() +
theme(axis.text = element_blank()) +
geom_text(aes(label = paste0(round(total_percent * 100), "%")), position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2")
user_data <- data.frame(
user_type_2_sl = c(1, 2, 3),
total_percent = c(0.25, 0.2916667, 0.4583333),
labels = c("needs Nap", "enough sleep", "Well rested")
)
ggplot(user_data, aes(x = "", y = total_percent, fill = labels)) +
geom_col(width = 1) +
coord_polar(theta = "y") +
labs(x = NULL, y = NULL, fill = NULL, title = "Users sleep behavior") +
theme_minimal() +
theme(axis.text = element_blank()) +
geom_text(aes(label = paste0(round(total_percent * 100), "%")), position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2")
user_type_percent_calories %>%
ggplot(data = user_type_percent_calories, mapping = aes(x = user_type, y = labels)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "User Type", y = "Total Percent", title = "Users calorie expenditure Level")
user_type_percent_calories %>%
ggplot(data = user_type_percent_calories, mapping = aes(x = user_type, y = labels)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "User Type", y = "Total Percent", title = "percentage of calories burnt by users")
View(activity_average)
View(dailyActivity_merged)
View(activity_average)
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance)) +
geom_point() +
labs(title = "Categorizing the users according to the level of calories expenditure"),
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance)) +
geom_point())
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance)) +
geom_point()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance, group = 1)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)+
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance, group = 1)) +
geom_point() +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance, group = 1)) +
geom_point() +
geom_smooth() +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance,)) +
geom_point() +
geom_smooth() +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance,)) +
geom_point() +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance,)) +
geom_smooth() +
geom_point() +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance,)) +
geom_smooth() +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
dailyActivity_merged %>%
ggplot(data = dailyActivity_merged, mapping = aes(x = TotalSteps, y = Calories, color = TotalDistance,)) +
geom_point() +
labs(title = "Calories vs. Total Steps", x = "Total Steps", y = "Calories", color = "Total Distance") +
theme_minimal()
